platform: linux
image_resource:
  type: docker-image
  source:
    repository: eu.gcr.io/census-gcr/gcloud-kubectl
params:
  ENV:
  SERVICE_ACCOUNT_JSON:
  KUBERNETES_CLUSTER:
  GCP_PROJECT_NAME:
inputs:
  - name: census-rm-kubernetes-dependencies-repo
    path: bash
    args:
      - -exc
      - |
        cat >~/gcloud-service-key.json <<EOL
        $SERVICE_ACCOUNT_JSON
        EOL
        # Use gcloud service account to configure kubectl
        gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
        gcloud container clusters get-credentials ${KUBERNETES_CLUSTER} --zone europe-west2 --project ${GCP_PROJECT_NAME}
        
        # Stop Postgresql instance
        SQL_NAME=`gcloud sql instances list --format="value(name)"`
        echo $SQL_NAME
        gcloud sql instances patch $SQL_NAME --activation-policy ALWAYS
        # Scale down cluster
        yes | gcloud container clusters resize $(KUBERNETES_CLUSTER) --num-nodes 0 --node-pool=default-node-pool --region=europe-west2
        yes | gcloud container clusters resize $(KUBERNETES_CLUSTER) --num-nodes 0 --node-pool=rabbit-node-pool --region=europe-west2


# - name: "Start Infrastructure"
#   disable_manual_trigger: true
#   serial: true
#   serial_groups: [
#     scale-down,
#     scale-apps,
#     action-scheduler,
#     action-worker,
#     case-api,
#     case-processor,
#     fieldwork-adapter,
#     notify-processor,
#     uac-qid-service,
#     pubsubsvc,
#     print-file-service,
#     exception-manager,
#     toolbox,
#     database-monitor,
#     rabbitmonitor]
#   plan:
#   - get: performance-tests-repo
#   - get: performance-tests-docker-image
#     params:
#       skip_download: true
#   - get: every-minute
#     trigger: true
#     passed: ["Trigger Performance Tests"]
#   - task: "Start Performance Test Infrastructure"
#     config:
#       platform: linux
#       image_resource:
#         type: docker-image
#         source:
#           repository: eu.gcr.io/census-gcr/gcloud-kubectl
#       params:
#         SERVICE_ACCOUNT_JSON: ((gcp.service_account_json))
#         KUBERNETES_CLUSTER: ((performance-kubernetes-cluster-name))
#         GCP_PROJECT_NAME: ((performance-gcp-project-name))
#       run:
#         path: bash
#         args:
#           - -exc
#           - |
#             cat >~/gcloud-service-key.json <<EOL
#             $SERVICE_ACCOUNT_JSON
#             EOL

#             # Use gcloud service account to configure kubectl
#             gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
#             gcloud container clusters get-credentials ${KUBERNETES_CLUSTER} --zone europe-west2 --project ${GCP_PROJECT_NAME}
            
#             # Start Postgresql instance
#             SQL_NAME=`gcloud sql instances list --format="value(name)"`

#             echo $SQL_NAME

#             gcloud sql instances patch $SQL_NAME --activation-policy ALWAYS

#             # Scale up cluster
#             yes | gcloud container clusters resize $(KUBERNETES_CLUSTER) --num-nodes 2 --node-pool=default-node-pool --region=europe-west2
#             yes | gcloud container clusters resize $(KUBERNETES_CLUSTER) --num-nodes 1 --node-pool=rabbit-node-pool --region=europe-west2
#   on_failure: *slack_performance_setup_failure